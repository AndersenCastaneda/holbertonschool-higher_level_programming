The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Function import:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[4.896], [3.333333]], 3)
    [[1.63], [1.11]]

    >>> matrix_divided([[]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[4], []], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[9.876, 5], (0, 2)], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[9999e9999, 11], [3.3333, "hello"]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists)of integers/floats

    >>> matrix_divided([[2, 4, 6]], "hello")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided([[2, 4, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[2, 4, 6]], float('inf'))
    [[0.0, 0.0, 0.0]]
