=============================
The ``7-BaseGeometry`` module
=============================

Using ``BaseGeometry``
---------------------

Import the class:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test it:

    >>> bg = BaseGeometry()

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -12)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

    >>> bg.integer_validator("fl", 5.6)
    Traceback (most recent call last):
    TypeError: fl must be an integer

    >>> bg.integer_validator("NaN", float('nan'))
    Traceback (most recent call last):
    TypeError: NaN must be an integer

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("true", True)
    Traceback (most recent call last):
    TypeError: true must be an integer

    >>> bg.integer_validator("tpl", (1, 2))
    Traceback (most recent call last):
    TypeError: tpl must be an integer

    >>> bg.integer_validator("_list", [1, 2])
    Traceback (most recent call last):
    TypeError: _list must be an integer

    >>> bg.integer_validator("_dict", {1, 2})
    Traceback (most recent call last):
    TypeError: _dict must be an integer

    >>> bg.integer_validator("none", None)
    Traceback (most recent call last):
    TypeError: none must be an integer

    >>> bg.integer_validator("big number", 99999e99999)
    Traceback (most recent call last):
    TypeError: big number must be an integer

    >>> bg.integer_validator("really big number", 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999)
